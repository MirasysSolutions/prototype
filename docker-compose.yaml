volumes:
  account_db:
    driver: local
  transaction_db:
    driver: local
services:
  ## Tools
  adminer:
    image: adminer
  ingress:
    image: nginx:1.25
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./.certs/nginx:/etc/nginx/certs
    ports:
      - '80:80'
      - '443:443'
  ## Event Bus
  nats:
    image: nats
    command: ['-js', '--config', '/etc/nats/nats.conf']
    volumes:
      - ./.nats-conf/nats.conf:/etc/nats/nats.conf
      - ./.jetstream:/data
      - ./.certs/nats:/etc/nats-certs/nats
  box:
    image: natsio/nats-box
    env_file:
      - ./.nats-box/.env
    volumes:
      - ./.nats-box/nsc:/nsc
      - ./.certs/k8s:/etc/nats-certs/nats
  ## Databases
  account_db:
    image: postgres:16
    volumes:
      - account_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'app'
      POSTGRES_DB: 'app'
      POSTGRES_PASSWORD: 'password'
      PGDATA: '/var/lib/postgresql/data/pgdata'
  transaction_db:
    image: postgres:16
    volumes:
      - transaction_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'app'
      POSTGRES_DB: 'app'
      POSTGRES_PASSWORD: 'password'
      PGDATA: '/var/lib/postgresql/data/pgdata'
  ## Services
  account:
    image: giaduy/account:demo
    build:
      context: .
      dockerfile: ./services/account/Dockerfile
    depends_on:
      - account_db
      - nats
    env_file:
      - ./services/account/.env.local
    working_dir: /app
    command: sh -c "npm -w account run start:dev"
    volumes:
      - ./:/app
      - ./.certs/k8s:/etc/nats-certs/nats
      - ./.creds:/etc/nats-creds
  transaction:
    image: giaduy/transaction:demo
    build:
      context: .
      dockerfile: ./services/transaction/Dockerfile
    depends_on:
      - transaction_db
      - nats
    env_file:
      - ./services/transaction/.env.local
    working_dir: /app
    command: sh -c "npm -w transaction run start:dev"
    volumes:
      - ./:/app
      - ./.certs/k8s:/etc/nats-certs/nats
      - ./.creds:/etc/nats-creds
